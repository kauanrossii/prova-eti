// <auto-generated />
using System;
using Eti.TravelManager.Infra.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Eti.TravelManager.Infra.Data.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250916012512_AdicionaViagensDestinos")]
    partial class AdicionaViagensDestinos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eti.TravelManager.Domain.Destinos.Entities.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ViagemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ViagemId");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("Eti.TravelManager.Domain.Viagens.Entities.Viagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DataChegada")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DataSaida")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("Eti.TravelManager.Domain.Destinos.Entities.Destino", b =>
                {
                    b.HasOne("Eti.TravelManager.Domain.Viagens.Entities.Viagem", null)
                        .WithMany("Destinos")
                        .HasForeignKey("ViagemId");
                });

            modelBuilder.Entity("Eti.TravelManager.Domain.Viagens.Entities.Viagem", b =>
                {
                    b.Navigation("Destinos");
                });
#pragma warning restore 612, 618
        }
    }
}
